$obj->find("ip")
    ->where("property.type","=","ipv6")
    ->where("property.active","=","true")
    ->orWhere("value","=","2.3.4.5")
    ->filter(function($obj){
        $obj->find("port","child")
            ->where("value","=","80")
            ->find("state","child")
            ->where("value","=","open");
    })->find("domain","parent")
    ->traverse(3);

// read with multiple steps
[
    {
        "type"  : "entity.find",
        "ident" : "ip",
        "where" : [
            "property.type ='ipv6' && property.active='true'",
            "value='2.3.4.5'"
        ]
    },
    {
        "type"      : "entity.find",
        "direction" : "child",
        "ident"     : "port",
        "imply"     : 0,
        "where" : [
            "value='80'"
        ]
    },
    {
        "type"      : "entity.find",
        "direction" : "child",
        "ident"     : "state",
        "imply"     : 1,
        "where" : [
            "value='open'"
        ]
    },
    {
        "type"      : "entity.find",
        "direction" : "parent",
        "ident"     : "domain",
        "imply"     : 0,
        "traverse"  : 3
    }
]

// update entry by where condition
[
    {
        "type"  : "entity.update",
        "ident" : "ip",
        "where" : [
            "value='2.3.4.5'"
        ]
        "set" : [
            "property.checked='true'" 
        ]
    }
]

// delete entry by value
[
    {
        "type"  : "entity.delete"
        "ident" : "ip",
        "where" : [
            "this.value='2.3.4.5'"
        ],
        "mode" : "unsafe"
    }
]

// create 1-N entities by json
[
    {
        "type"  : "entity.create"
        "data"  : "{//somejsondatatomapautoresolving and shit}",
	"mapto" : [
            13, // entity type id
            14  // entity id
        ]
    }
]

// link 2 entities using a relation
[
    {
        "type"  : "relation.create"
        "from"  :  [
            13, // entity type id
            14  // entity id
        ], 
	"to" : [
            16, // entity type id
            3  // entity id
        ],
	"prop" : {},
        "context" : ""
    }
]






[
    {
        "t"  : find",
        "i" : "ip",
        "w" : [
            "property.type ='ipv6'",
            "value='2.3.4.5'"
        ]
    },
    {
        "t"      : "find"
        "d" : "parent"
        "i"     : "domain",
        "r"   : true,
        "tr" : 3
    }
]


        "where" : [
            [
                {
                    key  : 'property.type',
                    op   : '=',
                    data : 'IPV6'
                },
                {
                    key  : 'property.active',
                    op   : '=',
                    data : 'true'
                },
             ]
            [
                {
                    key  : 'value',
                    op   : '=',
                    data : '2.3.4.5'
                }
             ]
        ]




$objQuery = new godb();
$objQuery->find("ip")->where(array("this.property.type","=","whatever")->+
$objQuery->find("person")->where(array("name","==","bernd"))








$query->find("ip", function($query) {
    $query->where("a","=","b")
          ->orWhere("c","=","d")
    })->filter(function($query) {
            $query->find("port")
                  ->where("value","=","80")
                  ->where("state","=","open")
                  ->orWhere("value","=","443")
                  ->where("state","=","open");
        },function($query) {
            $query->rfind("domain")
              ->where("tld","=","de");
        },
        htpdb::CONCAT_OR
    )->rfind("subnet")
    ->traverse(2);



[
    {
        "type"  : "entity.find",
        "ident" : "ip",
        "where" : [
            "property.a ='b'",
            "property.c='d'"
        ]
    },
    {
        "type"      : "filter",
        "id"        : 0,
        "imply"     : 0,
        "mode"      : "or"
    },
    {
        "type"      : "entity.find",
        "direction" : "child",
        "ident"     : "port",
        "imply"     : 0,
        "return"    : 1,
        "where" : [
            "value='80' && property.state='open'",
            "value='443' && property.state='open'"
        ]
    },
    {
        "type"      : "entity.find",
        "direction" : "parent",
        "ident"     : "domain",
        "imply"     : 0,
        "return"    : 1,
        "where" : [
            "property.tld='io' "
        ]
    },
    {
        "type"      : "entity.find",
        "direction" : "subnet",
        "ident"     : "domain",
        "imply"     : 1,
        "traverse"  : 2
    },
]















